// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel DEBUG_TestAssignToRenderTextures
#pragma kernel DEBUG_TestSpatialHashing

#include "../../../Common/Cgincs/Hash.cginc"
#include "UnityCG.cginc"

RWTexture3D<float3> windFieldStatic;
RWTexture3D<float3> windFieldDynamic;
RWTexture3D<float3> windFieldNoise;
float3 globalWind;

float windFieldCellSize;
float3 windFieldStart;

[numthreads(4,4,4)]
void DEBUG_TestAssignToRenderTextures(uint3 id : SV_DispatchThreadID)
{
    windFieldStatic[id] = float3(1, 0, 0) * -sin(_Time.y);
    windFieldDynamic[id] = float3(0, 1, 0) * sin(_Time.y);
    windFieldNoise[id] = float3(0, 0, 1);
}

[numthreads(4, 4, 4)]
void DEBUG_TestSpatialHashing(uint3 id : SV_DispatchThreadID)
{
    uint3 pos = hash((float3) (id * windFieldCellSize) + windFieldStart, windFieldCellSize, windFieldStart);
    //uint3 pos = hash((float3)id, windFieldCellSize, windFieldStart);
    //windFieldStatic[id] = isnan(pos) ? float3(1, 1, 1) : pos % 1;
    //windFieldDynamic[id] = isnan(pos) ? float3(1, 1, 1) : pos % 1;
    //windFieldNoise[id] = isnan(pos) ? float3(1, 1, 1) : pos % 1;
    //windFieldStatic[id] = normalize(pos + float3(1, 1, 1));
    //windFieldDynamic[id] = float3(0, pos.y, 0);
    //windFieldNoise[id] = float3(0, 1, pos.z);
    
}
